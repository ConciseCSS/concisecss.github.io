//
// Concise
// =============================================================================

html {
  min-height: 100vh;
}

// <html> in the documentation pages
.docs-root {
  overflow-y: hidden !important;
}

//
// Typography & Native elements
// ----------------------------

h1 {
  font-weight: 300;
  margin-bottom: unitSize(12);
  margin-top: unitSize(9);
  text-align: center;

  small {
    display: block;
    font-size: pxToEm(20, $h1-size);
  }
}

h2 {
  margin-bottom: unitSize(3);
  padding-bottom: unitSize(2);
}

h3 {
  margin-bottom: unitSize(2);
  margin-top: unitSize(6);
}

h4 { margin-top: unitSize(3); }


p {
  margin-bottom: unitSize(2);

  @media (min-width: $bp-small) {
    margin-bottom: unitSize(3, -4);
  }

  a {
    margin: 0 -.15em;
    padding: 0 .25em;
  }

  a:hover {
    background-color: getColor(base, primary);
    color: white;
  }
}

pre {
  margin: unitSize(2) 0;

  @media (min-width: $bp-small) {
    margin: unitSize(3, -4) 0;
  }

  code { white-space: pre; }
}

pre,
code { font-family: Hack, monospace; }

// Tables
table {
  font-size: pxToEm(16);
  text-align: center;
  width: 100%;

  th {
    line-height: 1;
    padding: 1em;
    text-align: center;
  }

  td {
    line-height: 1.75;
    padding-bottom: unitSize(1);
    padding-top: unitSize(1);
  }
}

iframe { margin-top: unitSize(3); }

// Modifiers
.text--callout { color: getColor(base, primary); }

.text--secondary {
  color: getColor(text, secondary);
  font-size: pxToEm(14);
}

.heading--docs { border-bottom: 1px solid getColor(base, lines); }



//
// Main Footer
// -----------

.main-footer {
  @include clearfix();

  background-color: white;
  font-size: pxToEm(14);
  margin-top: unitSize(6);
  padding: unitSize(3) pxToEm($gutter);
  text-align: center;

  @media (min-width: $bp-medium) {
    padding-right: 3em;
    padding-left: 3em;
  }

  a {
    color: getColor(text, primary);
    font-size: pxToEm(12);
    font-weight: bold;
    letter-spacing: 1px;
    text-transform: uppercase;

    &.active,
    &:hover,
    &:focus { color: getColor(base, primary); }
  }

  p {
    color: getColor(text, secondary);
    margin-bottom: 0;

    @media (min-width: $bp-medium) {
      float: left;
      line-height: 2;
    }
  }

  ul {
    margin: 0;

    @media (min-width: $bp-medium) {
      float: right;
    }
  }

  li {
    display: inline-block;
    margin-right: 1.5em;
    padding: 0;

    @media (min-width: $bp-medium) {
      margin-right: 2em;
    }

    &:last-child { margin-right: 0; }
  }
}



//
// Home page
// -------------

.intro {
  text-align: center;

  .logo { margin-bottom: 0; }

  h1 {
    margin-bottom: unitSize(3);
    margin-top: unitSize(3);
  }

  p { color: getColor(text, secondary); }
}

.intro-buttons {
  margin-bottom: unitSize(3);
  margin-top: unitSize(6);

  span {
    color: getColor(text, secondary);
    font-size: pxToEm(14);
    font-weight: bold;
    margin-left: .5em;
    vertical-align: baseline;
  }
}


//
// Documentation
// -------------

// Sidebar
.docs-nav {
  background-color: getColor(background, dark);
  bottom: 0;
  left: 0;
  overflow-y: auto;
  padding: unitSize(4) pxToEm($gutter);
  position: absolute;
  top: 0;
  transition: width $transition-duration;
  width: pxToEm(225);

  @media (min-width: $bp-small) {
    width: pxToEm(250);
  }

  @media (min-width: $bp-medium) {
    width: pxToEm(275);
  }

  @media (min-width: $bp-large) {
    width: pxToEm(300);
  }

  h2 {
    color: rgba(white, .75);
    margin-top: unitSize(3);
    padding-bottom: 0;
  }

  ul { padding: 0; }

  li {
    list-style: none;

    a {
      color: getColor(text, secondary);
      display: inline-block;
      font-size: pxToEm(16);
      height: unitSize(4);
      width: 100%;

      &.active,
      &:hover,
      &:focus { color: white; }
    }
  }

}

// Main wrapper
.docs {
  bottom: 0;
  left: pxToEm(300);
  overflow-y: auto;
  position: absolute;
  right: 0;
  top: 0;
}

// Content wrapper
.docs-content {
  margin: 0 auto;
  max-width: 900px;
  padding: pxToEm(($gutter / 2));

  @media (min-width: $bp-small) {
    padding: pxToEm($gutter);
  }
}



//
// Components
// ----------

.dropdown { cursor: pointer; }

.logo {
  display: inline-block;
  height: unitSize(9);
  margin-bottom: unitSize(6);
  text-align: center;
  width: 100%;

  img { height: 100%; }

  &:hover { animation-name: logo-pulse; }
}

// Notes
.note {
  border-top: 1px dashed getColor(base, lines);
  border-bottom: 1px dashed getColor(base, lines);
  font-size: pxToEm(16);
  margin-top: unitSize(3);
  padding: unitSize(2) 0;

  &:before {
    color: getColor(base, primary);
    content: "Note:";
    font-weight: bold;
    margin-right: .25em;
  }

  small { font-size: 85%; }
}

// Backgrounds
[class^='bg--'] { color: white; }

// Buttons
.button {
  font-size: pxToEm(16);
  transition-property: background-color;

  &:hover,
  &:focus { background-color: lighten(getColor(base, primary), 10%); }
}

.button + .button {
  margin-left: 1em;

  &.button--collapse {
    margin-left: 0;
    margin-top: 1em;

    @media (min-width: $bp-extra-small) {
      margin-left: 1em;
      margin-top: 0;
    }
  }
}

.button--secondary {
  background-color: getColor(base, secondary);

  &:hover,
  &:focus { background-color: lighten(getColor(base, secondary), 5%); }
}

// Animations
.animated {
  animation-duration: 1s;
  animation-fill-mode: both;
}

@keyframes logo-pulse {
  from { transform: scale3d(1, 1, 1); }

  50% { transform: scale3d(1.05, 1.05, 1.05); }

  to { transform: scale3d(1, 1, 1); }
}



//
// Color Palette
// -------------

.colorPalette {
  @include row();

  p {
    height: 75px;
    margin-bottom: 0;
  }

  span {
    color: white;
    display: block;
    font-family: $font-family-mono;
    font-size: pxToEm(12);
    margin-left: 1em;
    padding-top: unitSize(1);

    &.text--dark { color: getColor(text, secondary); }
  }
}

.colorPalette-third { @include column(1/3); }

.colorPalette-fifth { @include column(1/5); }

// Base colors
.colorPalette-basePrimary { background-color: getColor(base, primary); }

.colorPalette-baseSelection { background-color: getColor(base, selection); }

.colorPalette-baseLines { background-color: getColor(base, lines); }

// Text colors
.colorPalette-textPrimary { background-color: getColor(text, primary); }

.colorPalette-textSecondary { background-color: getColor(text, secondary); }

.colorPalette-textHeading { background-color: getColor(text, heading); }

// Background colors
.colorPalette-backgroundDark { background-color: getColor(background, dark); }

.colorPalette-backgroundLight {
  background-color: getColor(background, light);
  border: 1px solid getColor(base, lines);
}

.colorPalette-backgroundBody {
  background-color: getColor(background, body);
  border: 1px solid getColor(base, lines);
}

// State colors
.colorPalette-stateMuted { background-color: getColor(state, muted); }

.colorPalette-statePrimary { background-color: getColor(state, primary); }

.colorPalette-stateSuccess { background-color: getColor(state, success); }

.colorPalette-stateWarning { background-color: getColor(state, warning); }

.colorPalette-stateError { background-color: getColor(state, error); }

// Blue colors
.colorPalette-blueDarker { background-color: getColor(blue, darker); }

.colorPalette-blueDark { background-color: getColor(blue, dark); }

.colorPalette-blue { background-color: getColor(blue); }

.colorPalette-blueLight { background-color: getColor(blue, light); }

.colorPalette-blueLighter { background-color: getColor(blue, lighter); }

// Green colors
.colorPalette-greenDarker { background-color: getColor(green, darker); }

.colorPalette-greenDark { background-color: getColor(green, dark); }

.colorPalette-green { background-color: getColor(green); }

.colorPalette-greenLight { background-color: getColor(green, light); }

.colorPalette-greenLighter { background-color: getColor(green, lighter); }

// Cream colors
.colorPalette-creamDarker { background-color: getColor(cream, darker); }

.colorPalette-creamDark { background-color: getColor(cream, dark); }

.colorPalette-cream { background-color: getColor(cream); }

.colorPalette-creamLight { background-color: getColor(cream, light); }

.colorPalette-creamLighter { background-color: getColor(cream, lighter); }

// Red colors
.colorPalette-redDarker { background-color: getColor(red, darker); }

.colorPalette-redDark { background-color: getColor(red, dark); }

.colorPalette-red { background-color: getColor(red); }

.colorPalette-redLight { background-color: getColor(red, light); }

.colorPalette-redLighter { background-color: getColor(red, lighter); }

// Gray colors
.colorPalette-grayDarker { background-color: getColor(gray, darker); }

.colorPalette-grayDark { background-color: getColor(gray, dark); }

.colorPalette-gray { background-color: getColor(gray); }

.colorPalette-grayLight { background-color: getColor(gray, light); }

.colorPalette-grayLighter { background-color: getColor(gray, lighter); }
